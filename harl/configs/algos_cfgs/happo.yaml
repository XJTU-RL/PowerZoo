# This is the configuration file for the HAPPO algorithm.
seed:
  # whether to use the specified seed
  seed_specify: True
  # seed
  seed: 1
device:
  # whether to use CUDA
  cuda: True
  # whether to set CUDA deterministic
  cuda_deterministic: True
  # arg to torch.set_num_threads
  torch_threads: 4
train:
  # number of parallel environments for training data collection，不支持并行环境怎么办呢，default20，我先选不支持并行环境，改为1，实际选6也可以正常运行
  n_rollout_threads: 3
  # number of total training steps,default is 10000000，（n_rollout_threads* episode_length）并行收集的线程数量乘以episode的长度，即为总的步数，此处共有100个episode。
  num_env_steps: 48000
  # number of steps per environment per training data collection，电力系统按天算，一天24小时，正好episode长度是24
  episode_length: 24
  # logging interval,default is 5
  log_interval: 1
  # evaluation interval,default 25,for testing modified as 1,评估训练结果的间隔，最后会有50个结果
  eval_interval: 1
  # whether to use ValueNorm
  use_valuenorm: True
  # whether to use linear learning rate decay
  use_linear_lr_decay: False
  # whether to consider the case of truncation when an episode is done
  use_proper_time_limits: True
  # if set, load models from this directory; otherwise, randomly initialise the models,default ~
  model_dir: /home//yushixuan/HARL/results/powergym/123Bus/happo/test/seed-00001-2024-03-24-08-15-04-48k-3-3-s2b/models
eval:
  # whether to use evaluation
  use_eval: True
  # number of parallel environments for evaluation,default 10，这里使用4个，因为powergym提供的数据只有16个，12个用于训练，4个用于评估。
  n_eval_rollout_threads: 3
  # number of episodes per evaluation,default 20，每次评估使用的episode的数量，我的理解是，跑多少次取平均，此处为跑5次取平均应该，可以在代码中进行查看
  eval_episodes: 4
render:
  # whether to use render
  use_render: True
  # number of episodes to render
  render_episodes: 1
model:
  # network parameters
  # hidden sizes for mlp module in the network
  hidden_sizes: [128, 128]
  # activation function, choose from sigmoid, tanh, relu, leaky_relu, selu
  activation_func: relu
  # whether to use feature normalization
  use_feature_normalization: True
  # initialization method for network parameters, choose from xavier_uniform_, orthogonal_, ...
  initialization_method: orthogonal_
  # gain of the output layer of the network.
  gain: 0.01
  # recurrent parameters
  # whether to use rnn policy (data is not chunked for training)
  use_naive_recurrent_policy: False
  # whether to use rnn policy (data is chunked for training)
  use_recurrent_policy: False
  # number of recurrent layers
  recurrent_n: 1
  # length of data chunk; only useful when use_recurrent_policy is True; episode_length has to be a multiple of data_chunk_length
  data_chunk_length: 10
  # optimizer parameters
  # actor learning rate
  lr: 0.0005
  # critic learning rate
  critic_lr: 0.0005
  # eps in Adam
  opti_eps: 0.00001
  # weight_decay in Adam
  weight_decay: 0
  # parameters of diagonal Gaussian distribution
  std_x_coef: 1
  # parameters of diagonal Gaussian distribution
  std_y_coef: 0.5
algo:
  # ppo parameters
  # number of epochs for actor update
  ppo_epoch: 5
  # number of epochs for critic update
  critic_epoch: 5
  # whether to use clipped value loss
  use_clipped_value_loss: True
  # clip parameter
  clip_param: 0.2
  # number of mini-batches per epoch for actor update
  actor_num_mini_batch: 4
  # number of mini-batches per epoch for critic update
  critic_num_mini_batch: 4
  # coefficient for entropy term in actor loss
  entropy_coef: 0.01
  # coefficient for value loss
  value_loss_coef: 1
  # whether to clip gradient norm
  use_max_grad_norm: True
  # max gradient norm
  max_grad_norm: 10.0
  # whether to use Generalized Advantage Estimation (GAE)
  use_gae: True
  # discount factor在gae的文章中，gamma=0.99，gae_lamda=0.95的效果比较好
  gamma: 0.99
  # GAE lambda
  gae_lambda: 0.95
  # whether to use huber loss
  use_huber_loss: True
  # whether to use policy active masks
  use_policy_active_masks: True
  # huber delta
  huber_delta: 10.0
  # method of aggregating the probability of multi-dimensional actions, choose from prod, mean
  action_aggregation: prod
  # whether to share parameter among actors
  share_param: False
  # whether to use a fixed optimisation order
  fixed_order: False
logger:
  # logging directory
  #log_dir: "E:\\powergymHARL\\PowerZOO\\PowerZOO\\results"
  log_dir: '/home//yushixuan/HARL/results'
  
